name: BUILD-PUSH-PIPELINE

on:
  push:
    tags:
      - '*' 

jobs:
  build-profile-service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - name: "🔭 checkout code"
        uses: actions/checkout@v4
        with:
          ref: master
      
      - name: "🔧 setup Docker Buildx"
        uses: docker/setup-buildx-action@v3
      
      - name: "🔐 login to GitHub container registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PKG_TOKEN }}
      
      - name: "📦 build and push multi-arch Docker image"
        uses: docker/build-push-action@v5
        with:
          context: ./src/golang-profile-service
          file: ./src/golang-profile-service/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/profile-service:latest
          provenance: false
  
  build-auth-service:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "🔭 checkout code"
        uses: actions/checkout@v4
        with:
          ref: master
      
      - name: "📦 build docker image"
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/auth-service:latest .
        working-directory: src/fastapi-auth-service
      
      - name: "🔐 login to GitHub container registry"
        run: echo "${{ secrets.PKG_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      
      - name: "🚀 push image to GHCR"
        run: docker push ghcr.io/${{ github.repository_owner }}/auth-service:latest
  
  verify-services:
    runs-on: ubuntu-latest
    needs: [build-profile-service, build-auth-service]
    steps:
      - name: "📥 pull multi-arch profile-service image"
        run: docker pull ghcr.io/${{ github.repository_owner }}/profile-service:latest

      - name: "📥 pull auth-service image"
        run: docker pull ghcr.io/${{ github.repository_owner }}/auth-service:latest

      - name: "🐳 run profile-service (port 8080)"
        run: |
          docker run -d --rm -p 8080:8080 --name profile-service ghcr.io/${{ github.repository_owner }}/profile-service:latest

      - name: "🐳 run auth-service (port 8000)"
        run: |
          docker run -d --rm -p 8000:8000 --name auth-service ghcr.io/${{ github.repository_owner }}/auth-service:latest

      - name: "⏱ wait for services to start"
        run: sleep 10

      - name: "🔍 curl /healthz on auth-service (8000)"
        run: curl -f http://localhost:8000/healthz

      - name: "🔍 curl /healthz on profile-service (8080)"
        run: curl -f http://localhost:8080/healthz

      
